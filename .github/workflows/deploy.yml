name: Deploy Laravel
on:
  push:
    branches: [ "main" ]
env:
  # Setting an environment variable with the value of a configuration variable
  APP_NAME: ubuntu-ci-cd
  DB_HOST: mysql-ci-cd
  DB_DATABASE: laravel-starter
  LOCATION_FILE: /var/www/html/public/
  
jobs:
  prepare-env:
    name: prepare-env
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - run: sudo apt install -y sshpass && sshpass -p ${{secrets.SSH}} ssh -o PasswordAuthentication=yes -p 22 root@192.168.1.8
        'git clone https://github.com/nope-all/test-ci-cd.git'
   # - run: sed -i "s/DB_HOST=.*/DB_HOST=$DB_HOST/" .env.example
   # - run: sed -i "s/DB_DATABASE=.*/DB_DATABASE=$DB_DATABASE/" .env.example
   # - run: sed -i "s/DB_USERNAME=.*/DB_USERNAME=${{secrets.DB_ROOT}}/" .env.example
   # - run: sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=${{secrets.DB_ROOT}}/" .env.example
   # - run: docker network create $DB_DATABASE
   # - run: sudo docker run -itd --name $DB_HOST -e MYSQL_ROOT_PASSWORD=${{secrets.DB_ROOT}} -e MYSQL_DATABASE=$DB_DATABASE -e MYSQL_USERNAME=${{secrets.DB_USERNAME}} -e MYSQL_PASSWORD=${{secrets.DB_PASSWORD}} --net $DB_DATABASE mysql:8

  build:
    needs: prepare-env
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - run: sshpass -p ${{secrets.SSH}} ssh -o PasswordAuthentication=yes -p 22 root@192.168.1.8 "cd test-ci-cd && docker build -t $APP_NAME ."
